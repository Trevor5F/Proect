name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build
        run: docker build -t trevor5f/todolist_project:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_NAME }} --password-stdin
      - name: push
        run: docker push trevor5f/todolist_project:$GITHUB_REF_NAME-$GITHUB_RUN_ID


#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: clone
#        uses: actions/checkout@v2
#      - name: render configs
#        run: |
#          mkdir deploy
#          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
#          export DB_USER=${{ secrets.DB_USER }}
#          export DB_NAME=${{ secrets.DB_NAME }}
#          export DOCKER_NAME=${{ secrets.DOCKER_NAME }}
#          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
#      - name: copy files
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          password: ${{ secrets.PASSWORD }}
#          source: "deploy/docker-compose.yaml"
#          target: "test_app"
#          strip_components: 1
#      - name: run
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          password: ${{ secrets.PASSWORD }}
#          script: |
#            cd test_app
#            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose up -d