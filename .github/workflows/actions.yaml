name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build
        run: docker build -t trevor5f/todolist_project:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: push
        run: docker push trevor5f/todolist_project:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      SOCIAL_AUTH_VK_OAUTH2_KEY: ${{VK_OAUTH2_KEY}}
      SOCIAL_AUTH_VK_OAUTH2_SECRET: ${{VK_OAUTH2_SECRET}}
    steps:
      - name: clone
        uses: actions/checkout@v2
      - name: render configs
        run: |
          mkdir test_app
          cat docker-compose-ci.yaml | envsubst > test_app/docker-compose.yaml
      - name: copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "test_app/docker-compose.yaml"
          target: "test_app"
          strip_components: 1
      - name: run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd test_app
            docker-compose down --rmi all --volumes
            docker system prune -a -f
            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose up -d docker-compose