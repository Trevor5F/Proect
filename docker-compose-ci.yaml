version: '3.9'

services:
  db:
    image: postgres:13-alpine
    volumes:
      - ./database/postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

    restart: on-failure

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${USER} -d ${NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

    networks:
      - todolist

  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "80:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - todolist

  migrations:
    image: trevor5f/todolist_project:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate"
    networks:
      - todolist

  api:
    image: trevor5f/todolist_project:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - todolist

#  bot:
#      image: trevor5f/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
#      depends_on:
#        migrations:
#          condition: service_completed_successfully
#        postgres:
#          condition: service_healthy
#      env_file:
#        - ./.env
#      networks:
#        - todolist
#      command: >
#        sh -c "python manage.py runbot"


volumes:
  postgres_data:

networks:
  todolist:
    driver: brige