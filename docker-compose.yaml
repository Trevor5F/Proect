version: '3.9'

services:
  db:
    image: postgres:15
    volumes:
      - ./database/postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST: ${DB_HOST}
    restart: on-failure

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${USER} -d ${NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "80:80"
    depends_on:
      db:
        condition: service_healthy

#  bot:
#    build:
#      context: ..
#    depends_on:
#      migrations:
#        condition: service_completed_successfully
#      postgres:
#        condition: service_healthy
#    env_file:
#      - ../.env
#    environment:
#      POSTGRES_HOST: postgres
#    networks:
#      - todolist
#    command: >
#      sh -c "python manage.py runbot"

  migrations:
    build: .
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}

    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate"   

  api:
    build: .

    volumes:
      - ./.env:/todolist_code/.env
    depends_on:
      db:
        condition: service_healthy


volumes:
  postgres_data:

networks:
  todolist:
    driver: brige